@page
@model SalonWithRazor.Pages.SearchPage.SearchServicePageIndexModel
@using SalonWithRazor.Models;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@{
    ViewData["Title"] = "Paslaugų paieška";
    var random = new Random();
    var color1 = String.Format("#{0:X6}", random.Next(0x1000000));
    var color2 = String.Format("#{0:X6}", random.Next(0x1000000));
    var user = await UserManager.GetUserAsync(User);
}
<h4>@ViewData["Title"]</h4>
@{ if (!Model.Salon.Any())
    {
        <div class="alert alert-info">
            <text>Nerasta jokių paieškos rezultatų.</text>
        </div>
    }
}
<div class="container">
    <form asp-page="./SearchServices" method="get">
        <div class="form-group row">
            @* //couldnt complete this part with ef core
            <div class="col-xs-2" style="padding-right:5px;">
                <span class="d-inline-block align-middle">Ieškok pagal pavadimą:</span>
            </div>
            <div class="col-xs-1" style="padding-right:5px">
                <input value="@Model.CurrentFilterServiceName" name="SearchServiceName" class="form-control" type="text" autocomplete="off" />
            </div>
            <div class="col-xs-1" style="padding-right:5px;">
                <span class="d-inline-block align-middle"><i>ir/ar</i> kategoriją</span>
            </div>
                *@
            <div class="col-xs-2" style="padding-right:5px;">
                <span class="d-inline-block align-middle">Ieškok pagal kategoriją:</span>
            </div>
            <div class="col-xs-2" style="padding-right:5px">
                <select asp-items="ViewBag.ServiceCategories" name="searchServiceCategory" class="form-control custom-select" placeholder="Pasirink..." data-val="false">
                    <option value="">Visi</option>
                </select>
            </div>
            <div class="col-xs-1" style="padding-right:5px;">
                <span class="d-inline-block align-middle"><i>ir/ar</i> miestą</span>
            </div>
            <div class="col-xs-2" style="padding-right:5px">
                <select asp-items="ViewBag.Cities" name="SearchCityInt" class="form-control custom-select" placeholder="Pasirink..." data-val="false">
                    <option value="">Visi</option>
                </select>
            </div>
            <div class="col-xs-1" style="padding-right:5px;">
                <span class="d-inline-block align-middle"><i>ir/ar</i> datą</span>
            </div>
            <div class="col-xs-1" style="padding-right:5px">
                @{ var dateVal = !Tools.Comparer.IsDefaultValue(Model.CurrentFilterDate.Value) ? Model.CurrentFilterDate.Value.ToShortDateString() : "";
                    <input id="datepickerDay" name="searchDateDT" value="@dateVal" pattern="\d{4}-\d{1,2}-\d{1,2}" class="form-control custom-select" data-provide="datepicker" autocomplete="off" style="max-width: 130px;" />
                }
            </div>
            <div class="col-xs-2" style="padding-right:5px">
                <button type="submit" class="btn btn-outline-primary">
                    <i class="glyphicon glyphicon-search"></i> Ieškoti
                </button>
            </div>
            <div class="col-xs-2" style="padding-right: 5px">
                <a class="btn btn-outline-secondary" asp-page="./SearchServices"><i class="glyphicon glyphicon-remove"></i> Išvalyti</a>
            </div>
        </div>
    </form>
</div>


@{
    foreach (var salon in Model.Salon)
    {
        <div class="card mb-3" style="cursor: pointer;" onclick="location.href='/SalonPage/Index?id=@salon.Id&serviceCategoryId=@Model.CurrentFilterCategory';">
            <div class="row no-gutters">
                <div class="col-md-2" style="background: @color1; background: linear-gradient(135deg, @color1 0%,@color1 51%, @color2 51%, @color2 100%);">
                </div>
                <div class="col-md-8" style="padding-right:20px; border-right: 1px solid #ebebeb;">
                    <div class="card-body">
                        <h5 class="card-title">@salon.Name</h5>
                        <p class="card-text"><small class="text-muted">@salon.Address, @salon.City.Name</small></p>
                        <p class="card-text">
                            Atlieka paslaugas šiose kategorijose:
                            @{
                                var serviceCategories = String.Join(", ", salon.Service.OrderBy(r => r.ServiceCategory.Name).
                                    Select(r => r.ServiceCategory.Name).Distinct().ToArray());

                                @Html.DisplayFor(r => serviceCategories)
                            }
                        </p>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="card-body" style="padding-bottom:0px;">
                        <h5 class="card-title">Darbo laikas</h5>
                        <p class="card-text">
                            <table class="table table-responsive table-responsive-sm table-borderless text-center" style="        table-layout: fixed;
        display: block;
        font-size: 10px;
        border-collapse: collapse;
        padding: 0px;">
                                <tbody>
                                    @{
                                        var currentDay = (byte)DateTime.Now.DayOfWeek;
                                        foreach (var times in salon.SalonSchedule)
                                        {
                                            var day = "";
                                            var startTime = times.StartTime.ToString().Substring(0, 5);
                                            var endTime = times.EndTime.ToString().Substring(0, 5);
                                            var color = startTime != endTime ? "#449D44" : "#D9534F";
                                            switch (times.Day)
                                            {
                                                case 1: day = "Pirmadienis"; break;
                                                case 2: day = "Antradienis"; break;
                                                case 3: day = "Trečiadienis"; break;
                                                case 4: day = "Ketvirtadienis"; break;
                                                case 5: day = "Penktadienis"; break;
                                                case 6: day = "Šeštadienis"; break;
                                                case 7: day = "Sekmadienis"; break;
                                            }
                                            <tr>

                                                <td style=" border-collapse: collapse; padding: 1px;"><text class="dot text-center" style="background-color: @color; color: @color;"></text></td>
                                                <td style="width: 50%; border-collapse: collapse; padding: 0px;">
                                                    @if (currentDay == times.Day)
                                                    {
                                                        <b>@day</b>
                                                    }
                                                    else
                                                    {
                                                        @day
                                                    }
                                                </td>
                                                <td style="width: 12.5%; border-collapse: collapse; padding: 1px;">&nbsp;&nbsp;@Html.DisplayFor(r => startTime)</td>
                                                <td style="width: 8.33%; border-collapse: collapse; padding: 1px;">-</td>
                                                <td style="width: 12.5%; border-collapse: collapse; padding: 1px;">@Html.DisplayFor(r => endTime)</td>
                                            </tr>
                                        }

                                    }
                                </tbody>
                            </table>
                        </p>
                    </div>
                </div>

            </div>


            @{var sortOrder = new Dictionary<int, int>();
                /*0 male,1 female, 2 all. male sql order sample below
                ORDER BY  CASE
                WHEN Gender = 0 THEN 0
                WHEN Gender = 1 THEN 2
                WHEN Gender = 2 THEN 1
                END
                it gives priority to selected user gender.
                */
                if (SignInManager.IsSignedIn(User) && user.Gender == (UserGender)0)
                {
                    sortOrder.Add(0, 0);
                    sortOrder.Add(1, 2);
                    sortOrder.Add(2, 1);
                }
                else if (SignInManager.IsSignedIn(User) && user.Gender == (UserGender)1)
                {
                    sortOrder.Add(0, 2);
                    sortOrder.Add(1, 0);
                    sortOrder.Add(2, 1);

                }
                else
                {
                    sortOrder.Add(0, 1);
                    sortOrder.Add(1, 1);
                    sortOrder.Add(2, 0);
                }
                var defaultOrder = sortOrder.Max(r => r.Value) + 1;
            }
            <div class="list-group">
                <a class="list-group-item list-group-item-light" style="padding-bottom: 0px; padding-top: 0px;"><i>Rodomos daugiausiai 3 paslaugos, kurios atitinka nustatytą kategoriją - pilnas sąrašas paspaudus ant salono pavadinimo.</i></a>
                @foreach (var service in salon.Service
            .Where(r => (Model.CurrentFilterCategory != 0) ? r.ServiceCategoryId == Model.CurrentFilterCategory : true)
            .OrderBy(r => sortOrder.TryGetValue((int)r.Gender, out var order) ? order : defaultOrder)
            .Take(3))
                {
                    <a href="#" class="list-group-item list-group-item-action">@Html.DisplayFor(modelItem => service.FullName), Trukmė: @Html.DisplayFor(modelItem => service.EstimatedTimeHumanized)</a>
                }
            </div>
        </div>
        color1 = String.Format("#{0:X6}", random.Next(0x1000000));
        color2 = String.Format("#{0:X6}", random.Next(0x1000000));
    }

}


@{
    var prevDisabled = !Model.Salon.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Salon.HasNextPage ? "disabled" : "";
}

<nav>
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a asp-page="./SearchServices"
               asp-route-pageIndex="@(Model.Salon.PageIndex - 1)"
               asp-route-currentFilterCategory="@Model.CurrentFilterCategory"
               asp-route-currentFilterCity="@Model.CurrentFilterCity"
               asp-route-currentFilterDate="@Model.CurrentFilterDate"
               asp-route-currentFilterServiceName="@Model.CurrentFilterServiceName"
               class="page-link">
                Praeitas
            </a>
        </li>
        <li class="page-item @nextDisabled">
            <a asp-page="./SearchServices"
               asp-route-pageIndex="@(Model.Salon.PageIndex + 1)"
               asp-route-currentFilter="@Model.CurrentFilterCategory"
               asp-route-currentFilterDate="@Model.CurrentFilterDate"
               asp-route-currentFilterServiceName="@Model.CurrentFilterServiceName"
               class="page-link">
                Kitas
            </a>
        </li>
    </ul>
</nav>


<a href='javascript:history.go(-1)'>Grįžti atgal</a>

@section scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/js/standalone/selectize.min.js" integrity="sha256-+C0A5Ilqmu4QcSPxrlGpaZxJ04VjsRjKu+G82kl5UJk=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/css/selectize.bootstrap3.min.css" integrity="sha256-ze/OEYGcFbPRmvCnrSeKbRTtjG4vGLHXgOqsyLFTRjg=" crossorigin="anonymous" />
    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            $('select').selectize({
                //sortField: 'text' //disabled because it's messes with default sorting
            });
        });
    </script>
}

<style>
    .selectize-control {
        width: 150px !important;
    }

    .selectize-input {
        min-height: 38px !important;
    }

    /* Remove the top border when a table is missing the header */
    .table > tbody > tr:first-child > td {
        border: none;
    }

    /* Include the border when there's a header */
    .table > thead + tbody > tr:first-child > td {
        border-top: 1px solid #ddd;
    }




    .dot {
        height: 8px;
        width: 8px;
        background-color: #bbb;
        border-radius: 50%;
        display: inline-block;
    }
</style>


